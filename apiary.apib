FORMAT: 1A
HOST: https://elo-ranking-development.vapor.cloud/

# EloRanking

Elo ranking is a simple API allowing consumers to create players, games and update rankings.

## Auth Services [/auth]

### Login Player [POST /login]

+ Request (application/json)

    + Headers

            Authorization: Basic YTph (basic auth uses username:password encode base 64)
        

+ Response 200 (application/json)

        {
            "token": "Nl/1B3AL2iYQfn+h05FLKw==",
            "email": "email@email.com"
        }
        
+ Response 401 (text/plain)

            Error: "There is no such a message for you, dear guest."


+ Response 410 (text/plain)

        The message you are searching for does not exist anymore.
        
### Logout Player [DELETE /logout]

+ Request (application/json)

    + Headers

            Authorization: Bearer Nl/1B3AL2iYQfn+h05FLKw== (token retrieved from login)

+ Response 204


## Player Services [/player]

### Create Player [POST /player]

+ Request (application/json)

    + Body

            {
                "username": "Username",
                "email": "email@email.com",
                "password": "password"
            }

+ Response 201 (application/json)

    + Body

            {
                "email": "email@email.com",
                "username": "Username",
                "losses": 0,
                "elo": 1300,
                "wins": 0
            }


### List Players [GET /players]

+ Request (application/json)
    
    
+ Response 201 (application/json)
    + Headers


    + Body

            [{
                "email": "email@email.com",
                "username": "Username",
                "losses": 0,
                "elo": 1300,
                "wins": 0
            }]
            
### Find Player [GET /player{?email}]

+ Parameters
    + email: playerEmail (string)


+ Request (application/json)


+ Response 201 (application/json)
    + Headers


    + Body

            {
                "email": "email@email.com",
                "username": "Username",
                "losses": 0,
                "elo": 1300,
                "wins": 0
            }


## Game Services [/game]

### Create Game [POST /game{?email}]

+ Parameters
    + email: contenderEmail (String) - Email of the player to challenge

+ Request (application/json)

    + Headers
    
            Authorization: Bearer Nl/1B3AL2iYQfn+h05FLKw== (token retrieved from login)


    + Body
    
            {
                "name": "Game playerA vs playerB"
            }

+ Response 201 (application/json)

    + Body
    
            {
                "contender": "email2@email2.com",
                "status": 0,
                "name": "Game playerA vs playerB",
                "challenger": "email@email.com"
            }


### Accept Game [POST /game/accept]

+ Request (application/json)

    + Headers
    
            Authorization: Bearer Nl/1B3AL2iYQfn+h05FLKw== (token retrieved from login)
        

+ Response 204 (application/json)
    

### List Games [GET /games]

+ Request (application/json)

    + Headers
    
            Authorization: Bearer Nl/1B3AL2iYQfn+h05FLKw== (token retrieved from login)



+ Response 201 (application/json)

    + Body
    
            [{
                "contender": "email2@email2.com",
                "status": 0,
                "name": "Game playerA vs playerB",
                "challenger": "email@email.com"
            }]


### Win Game [POST /game/winner]

+ Request (application/json)

    + Headers
    
            Authorization: Bearer Nl/1B3AL2iYQfn+h05FLKw== (token retrieved from login)


+ Response 204 (application/json)
    

### Lose Game [POST /game/loser]

+ Request (application/json)

    + Headers
    
            Authorization: Bearer Nl/1B3AL2iYQfn+h05FLKw== (token retrieved from login)


+ Response 204 (application/json)