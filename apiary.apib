FORMAT: 1A
HOST: https://elo-ranking-development.vapor.cloud/ranking/api/v1.0/

# Elo Rate
### Production Base Path: https://elo-ranking-development.vapor.cloud/ranking/api/v1.0/
###

Elo rate is a simple API allowing consumers to create and register games
against other oponnents, updating their elo according to the outcome of the game.

Start by creating a player, login in using the username and password, and save
the token given for further API requests that require authentication.

## Auth Services [/auth]

### Login Player [POST /auth/login]

+ Request (application/json)

    + Headers

            Authorization: Basic YTph (basic auth uses username:password encode base 64)
        

+ Response 200

        {
            "token": "Nl/1B3AL2iYQfn+h05FLKw=="
        }
        
        
### Recover Password [POST /auth/recover{?email}]

+ Parameters

    + email: j0cs@gmail.com (String) - Email of the player to send a new password
    
    
+ Request (application/json)

    + Headers
    

+ Response 200


### Logout Player [DELETE /auth/logout]

+ Request (application/json)

    + Headers

            Authorization: Bearer Nl/1B3AL2iYQfn+h05FLKw== (token retrieved from login)


+ Response 203


## Player Services [/player]

### List Players [GET /players]

+ Request (application/json)
    
    
+ Response 200

    + Body

            [
                {
                    "id": "7FCACB0ECA9349DD901933A8F6214A0D",
                    "username": "j0cs",
                    "email": "j0cs@email.com"
                }
            ]


### List Player Stats [GET /player/stats]

+ Request (application/json)

    + Headers

            Authorization: Bearer Nl/1B3AL2iYQfn+h05FLKw== (token retrieved from login)
    
    
+ Response 200

    + Body

            [
                {
                    "losses": 0,
                    "id": "F9722FEAA3D44DEA8F03F7FE9696C8AB",
                    "playerId": "EC3E25B285C14111A9898AAA7B0E4A93",
                    "gameId": "D2E47D54A71E425E990D4C6537C5B942",
                    "elo": 1200,
                    "wins": 0
                }
            ]


### List Player Matches [GET /player/matches]

+ Request (application/json)

    + Headers

            Authorization: Bearer Nl/1B3AL2iYQfn+h05FLKw== (token retrieved from login)
    
    
+ Response 200

    + Body

            [
                {
                    "status": "completed",
                    "winner": "7FCACB0ECA9349DD901933A8F6214A0D",
                    "gameId": "D2E47D54A71E425E990D4C6537C5B942",
                    "id": "9A26AB48F609424D98EE63BF72C2C61E",
                    "challengerId": "EC3E25B285C14111A9898AAA7B0E4A93",
                    "description": "Some description of match",
                    "contenderId": "7FCACB0ECA9349DD901933A8F6214A0D"
                }
            ]

       
### Find Player [GET /player/{id}]

+ Parameters

    + id: 7FCACB0ECA9349DD901933A8F6214A0D (required,string) - Player id to find


+ Request (application/json)


+ Response 200

    + Body

            {
                "id": "7FCACB0ECA9349DD901933A8F6214A0D",
                "username": "j0cs",
                "email": "j0cs@email.com"
            }


### Create Player [POST /player]

+ Request (application/json)

    + Attributes

        + username: j0cs (required, string) - Username for login
        + email: j0cs@gmail.com (required, string) - Email to recover password from
        + password: j0cs123 (required, string) - Password for login


    + Body

            {
                "username": "j0cs",
                "email": "j0cs@email.com",
                "password": "j0cs123"
            }
            

+ Response 200

    + Body

            {
                "id": "7FCACB0ECA9349DD901933A8F6214A0D",
                "username": "j0cs",
                "email": "j0cs@email.com"
            }


### Update Player [PUT /player/update/]

+ Request (application/json)

    + Attributes

        + username: j0cs (string) - Optional Username for login
        + email: j0cs@gmail.com (string) - Optional Email to recover password from
        + password: j0cs123 (string) - Optional Password for login


    + Headers

            Authorization: Bearer Nl/1B3AL2iYQfn+h05FLKw== (token retrieved from login)
            
            
    + Body

            {
                "username": "j0cs",
                "email": "j0cs@email.com",
                "password": "j0cs123"
            }


+ Response 200

    + Body

            {
                "id": "7FCACB0ECA9349DD901933A8F6214A0D",
                "username": "j0cs",
                "email": "j0cs@email.com"
            }


## Game Services [/game]

### List Games [GET /games/]

+ Request (application/json)
    
    
+ Response 200

    + Body

            [
                {
                    "id": "D2E47D54-A71E-425E-990D-4C6537C5B942",
                    "name": "Darts"
                }
            ]


### Create Game [POST /game/]

+ Request (application/json)

    + Attributes

        + name: Game name (required,string) - Unique name for game


    + Headers

            Authorization: Bearer Nl/1B3AL2iYQfn+h05FLKw== (token retrieved from login)
            
            
    + Body

            {
                "name": "Game name"
            }


+ Response 200

    + Body

            {
                "id": "D2E47D54A71E425E990D4C6537C5B942",
                "name": "j0cs"
            }


### Register Player in Game [POST /game/{id}/register/]

+ Parameters

    + id: D2E47D54A71E425E990D4C6537C5B942 (required,string) - Game id to register player


+ Request (application/json)


+ Response 200

    + Body

            {
                "losses": 0,
                "id": "F9722FEAA3D44DEA8F03F7FE9696C8AB",
                "playerId": "EC3E25B285C14111A9898AAA7B0E4A93",
                "gameId": "D2E47D54A71E425E990D4C6537C5B942",
                "elo": 1200,
                "wins": 0
            }


### Challenge other Player in Game [POST /game/{gameId}/challenge/{playerId}]

+ Parameters

    + gameId: D2E47D54A71E425E990D4C6537C5B942 (required,string) - Game id of match to create
    + playerId: 7FCACB0ECA9349DD901933A8F6214A0D (required,string) - player id to challenge


+ Request (application/json)


+ Response 200

    + Body

            {
                "status": "pending",
                "winner": "",
                "gameId": "D2E47D54A71E425E990D4C6537C5B942",
                "id": "9A26AB48F609424D98EE63BF72C2C61E",
                "challengerId": "EC3E25B285C14111A9898AAA7B0E4A93",
                "description": "",
                "contenderId": "7FCACB0ECA9349DD901933A8F6214A0D"
            }


### Accept Game Match [POST /game/{gameId}/match/{matchId}/accept]

+ Parameters

    + gameId: D2E47D54A71E425E990D4C6537C5B942 (required,string) - Game id of match to accept
    + matchId: 9A26AB48F609424D98EE63BF72C2C61E (required,string) - Match id to accept


+ Request (application/json)


+ Response 200

    + Body

            {
                "status": "ongoing",
                "winner": "",
                "gameId": "D2E47D54A71E425E990D4C6537C5B942",
                "id": "9A26AB48F609424D98EE63BF72C2C61E",
                "challengerId": "EC3E25B285C14111A9898AAA7B0E4A93",
                "description": "",
                "contenderId": "7FCACB0ECA9349DD901933A8F6214A0D"
            }


### Win Game Match [POST /game/{gameId}/match/{matchId}/winner]

+ Parameters

    + gameId: D2E47D54A71E425E990D4C6537C5B942 (required,string) - Game id of match to win
    + matchId: 9A26AB48F609424D98EE63BF72C2C61E (required,string) - Match id to win


+ Request (application/json)

    + Attributes

        + description: Some description of match (string) - Optional description of match


+ Response 200

    + Body

            {
                "status": "completed",
                "winner": "7FCACB0ECA9349DD901933A8F6214A0D",
                "gameId": "D2E47D54A71E425E990D4C6537C5B942",
                "id": "9A26AB48F609424D98EE63BF72C2C61E",
                "challengerId": "EC3E25B285C14111A9898AAA7B0E4A93",
                "description": "Some description of match",
                "contenderId": "7FCACB0ECA9349DD901933A8F6214A0D"
            }


### Lose Game Match [POST /game/{gameId}/match/{matchId}/loser]

+ Parameters

    + gameId: D2E47D54A71E425E990D4C6537C5B942 (required,string) - Game id of match to lose
    + matchId: 9A26AB48F609424D98EE63BF72C2C61E (required,string) - Match id to lose


+ Request (application/json)

    + Attributes

        + description: Some description of match (string) - Optional description of match


+ Response 200

    + Body

            {
                "status": "completed",
                "winner": "7FCACB0ECA9349DD901933A8F6214A0D",
                "gameId": "D2E47D54A71E425E990D4C6537C5B942",
                "id": "9A26AB48F609424D98EE63BF72C2C61E",
                "challengerId": "EC3E25B285C14111A9898AAA7B0E4A93",
                "description": "Some description of match",
                "contenderId": "7FCACB0ECA9349DD901933A8F6214A0D"
            }